version: '3.8'

services:
  backstage:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    ports:
      - '7007:7007'
    environment:
      # Variáveis de ambiente que serão passadas para o contêiner do Backstage
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    depends_on:
      postgres:
        condition: service_healthy # Espera o Postgres passar no healthcheck

  postgres:
    image: postgres:13
    restart: always
    environment:
      # Variáveis de ambiente para a imagem do Postgres
      - POSTGRES_USER=backstage
      - POSTGRES_PASSWORD=spc1f1qhoeow3dzx
      - POSTGRES_DB=backstage
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck: # Adiciona um healthcheck para o serviço do Postgres
      test: ["CMD-SHELL", "pg_isready -U backstage -d backstage"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data: